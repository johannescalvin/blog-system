#!/bin/sh
#
# 当前工作目录,向上回溯两级得到git工作目录
# 进而可以得到.git目录位置
current_dir=`pwd`
git_base_dir="${current_dir%%.git/hooks}"
dot_git_dir=${git_base_dir}'.git'
# 本地clone的地址
local_git_clone_url="$USER"'@localhost:'"$dot_git_dir"

# echo '本地克隆地址'$local_git_clone_url

# 代码拉取的目标位置
work_dir=~/markdown-blog/
if [ ! -e ${work_dir} ]; then
	# echo ${work_dir}"不存在"
    mkdir -p ${work_dir}
	if [ $? -ne 0 ]; then
        echo ${work_dir}'创建失败,请确认拥有取权限'
        exit 1;
    fi
fi

if [ ! -d ${work_dir} ]; then
        echo ${work_dir}"不是目录"
        exit 1;
fi

if [ ! -w ${work_dir} ]; then 
	echo ${work_dir}'不可写，没有权限';
	exit 1;
fi

cd ${work_dir};
if [ ! $? -eq 0 ]; then
	echo ’进入‘${work_dir}'失败'
	exit 1;
fi

if [ "`ls -A $PWD`" = "" ]; then
  echo '$PWD是空目录'
  git init
  git remote add origin $local_git_clone_url
else
    git status
    if [ $? -ne 0 ]; then
        echo ${work_dir}'不是一个空目录，也不是一个git目录;';
        echo "请确保${work_dir}是一个空目录，否则无法使用脚本更新博客"
        exit 1;
    fi
fi


unset GIT_DIR
# 在相应目录中拉取master分支
# 从而确保在本地push的文件，对应用来说是可见的
branch=`git branch | awk '{print $2}'`
if [ ! $branch == 'master' ];then
    echo '切换至master分支'
    git checkout --quiet master
fi

# 为了不至于每次pull都输入密码
# 需要设置本机免密码登陆
# 方法可参照
# cat ~/.ssh/id_rsa.pub >> ~/authorized_keys
# chmod 0600 authorized_keys

git  pull --quiet origin master

if [ $? -ne 0 ];then
    echo '拉取失败'
    exit 1;
fi

# 利用git判断出哪些.md文件需要被重新索引和渲染
# 避免java使用轮寻方式监控相应的目录
# java开放REST接口就成，开发难度降低
if [ ! -f 'update_blog.sh' ];then
    wget https://raw.githubusercontent.com/johannescalvin/blog-system/develop/scripts/update.sh -O update_blog.sh
    chmod +x update_blog.sh
    echo 'update_blog.sh' >> .gitignore
    echo '.gitignore' >> .gitignore
fi

exec ./update_blog.sh

